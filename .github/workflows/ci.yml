name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build:
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN || '' }}
      HUSKY: 0
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      # - name: Get pnpm store directory
      #   id: pnpm-cache
      #   shell: bash
      #   run: |
      #     echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      # - uses: actions/cache@v3
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      # - name: Use Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      #     registry-url: 'https://registry.npmjs.org'
      # - name: Cache dependencies
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: npm-${{ hashFiles('package-lock.json') }}
      #     restore-keys: npm-
      # - name: Install npm
      #   run: npm install -g npm@8
      # - name: npm ci, lint
      #   run: |
      #     npm ci --ignore-scripts
      #     npm run lint
      #   env:
      #     CI: true
      - name: Install dependencies
        env:
          CI: true
        run: |
          pnpm install
          pnpm run lint

      # Publish to NPM
      - name: Publish Latest Release
        if: github.event_name == 'release' && github.event.release.prerelease == false && env.NODE_AUTH_TOKEN != ''
        run: pnpm run publish-ci

      # Publish to NPM with prerelease dist-tag
      - name: Publish Latest Prerelease
        if: github.event_name == 'release' && github.event.release.prerelease && env.NODE_AUTH_TOKEN != ''
        run: pnpm run publish-ci --dist-tag prerelease
